import React from 'react';
import styles from './Modal.module.css';
import male from '../../assets/male.png';
import female from '../../assets/female.png';
import neuter from '../../assets/genders.png';
function Modal(props) {
    const { setActive, data, error } = props;
    const handleClose = () => setActive(false);
    const gender = data?.gender === 'male' ? male : data?.gender === 'female' ? female : neuter;
    return (React.createElement("div", { className: styles.modal, onClick: handleClose },
        React.createElement("section", { className: styles.content, onClick: (evt) => evt.stopPropagation() },
            React.createElement("button", { className: styles.close, type: "button", onClick: handleClose }, "x"),
            !!error ? (React.createElement("p", null, error)) : (React.createElement(React.Fragment, null,
                React.createElement("h3", { className: styles.title }, data?.name),
                React.createElement("dl", null,
                    !!data?.height && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Height:"),
                        React.createElement("dd", { className: styles.paramData }, data.height))),
                    !!data?.mass && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Mass:"),
                        React.createElement("dd", { className: styles.paramData }, data.mass))),
                    !!data?.hair_color && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Heir color:"),
                        React.createElement("dd", { className: styles.paramData }, data.hair_color))),
                    !!data?.skin_color && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Skin color:"),
                        React.createElement("dd", { className: styles.paramData }, data.skin_color))),
                    !!data?.eye_color && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Eye color:"),
                        React.createElement("dd", { className: styles.paramData }, data.eye_color))),
                    !!data?.birth_year && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Date of birth:"),
                        React.createElement("dd", { className: styles.paramData }, data.birth_year))),
                    !!data?.species && typeof data.species === 'string' && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Species:"),
                        React.createElement("dd", { className: styles.paramData }, data.species))),
                    !!data?.homeworld && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Home world:"),
                        React.createElement("dd", { className: styles.paramData },
                            React.createElement("a", { href: data.homeworld }, data.homeworld)))),
                    !!data?.films && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Films:"),
                        React.createElement("dd", { className: styles.paramData }, data.films.map((film) => film.split('/').at(-2)).join(', ')))),
                    !!data?.vehicles && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Vehicles:"),
                        React.createElement("div", null,
                            !data.vehicles.length && 'none',
                            data.vehicles.map((vehicle) => (React.createElement("dd", { className: styles.paramData, key: vehicle },
                                React.createElement("a", { href: vehicle }, vehicle))))))),
                    !!data?.starships && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Starships:"),
                        React.createElement("div", null,
                            !data.starships.length && 'none',
                            data.starships.map((starship) => (React.createElement("dd", { className: styles.paramData, key: starship },
                                React.createElement("a", { href: starship }, starship))))))),
                    !!data?.gender && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Gender:"),
                        React.createElement("dd", { className: styles.paramData },
                            React.createElement("img", { src: gender, title: data.gender, "aria-label": data.gender })))),
                    !!data?.created && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Created:"),
                        React.createElement("dd", { className: styles.paramData }, data.created.split('T')[0]))),
                    !!data?.edited && (React.createElement("div", { className: styles.parameter },
                        React.createElement("dt", { className: styles.paramName }, "Edited:"),
                        React.createElement("dd", { className: styles.paramData }, data.edited.split('T')[0])))))))));
}
export default Modal;
